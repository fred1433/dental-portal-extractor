#!/usr/bin/env python3
"""
CAPTURE COMPL√àTE DE TOUTES LES REQU√äTES METLIFE
Ce script capture ABSOLUMENT TOUT dans un HAR
"""
import asyncio
from playwright.async_api import async_playwright
from datetime import datetime

async def capture_complete_har():
    print("üöÄ CAPTURE HAR COMPL√àTE METLIFE")
    print("="*60)
    print("‚ö†Ô∏è  IMPORTANT: Ce script va capturer TOUTES les requ√™tes")
    print("    depuis le login jusqu'√† la fin de votre navigation")
    print("="*60)

    timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
    har_filename = f"metlife_COMPLET_{timestamp}.har"

    async with async_playwright() as p:
        # Lancer avec HAR qui capture TOUT
        print("\nüìπ D√©marrage de la capture HAR...")
        browser = await p.chromium.launch(
            headless=False,
            args=[
                f'--save-har={har_filename}',
                '--save-har-glob=**'  # Capturer TOUTES les requ√™tes
            ]
        )

        # Nouveau contexte (pas de session existante pour tout capturer)
        print("üÜï Cr√©ation d'un contexte propre (sans session)...")
        context = await browser.new_context()
        page = await context.new_page()

        print("\n" + "="*60)
        print("üìã NAVIGATION COMPL√àTE √Ä EFFECTUER:")
        print("="*60)
        print("""
1Ô∏è‚É£  LOGIN:
   ‚Ä¢ Page de login va s'ouvrir
   ‚Ä¢ Entrez: payorportal4771 / Dental24!
   ‚Ä¢ G√©rez le MFA si n√©cessaire

2Ô∏è‚É£  RECHERCHE PATIENT:
   ‚Ä¢ Sur PesSignIn, entrez: 635140654
   ‚Ä¢ Si demand√©, entrez: TEDFORD

3Ô∏è‚É£  S√âLECTION MEMBRE:
   ‚ö†Ô∏è  CLIQUEZ sur un membre (ex: AVERLY G TEDFORD)

4Ô∏è‚É£  S√âLECTION PROVIDER:
   ‚Ä¢ S√©lectionnez un provider (peu importe lequel)

5Ô∏è‚É£  NAVIGATION DANS LES ONGLETS (TR√àS IMPORTANT!):

   a) Cliquez sur "Maximums & Deductibles"
      ‚Üí Attendez que √ßa charge compl√®tement
      ‚Üí V√©rifiez que vous voyez "$196" ou "Maximum Used to Date"

   b) Cliquez sur "Benefit Levels, Frequency & Limitations"
      ‚Üí Attendez que √ßa charge
      ‚Üí V√©rifiez les dates de service (03/28/25, 03/10/25)

   c) Cliquez sur "Patient Summary"
      ‚Üí Attendez que √ßa charge

   d) Si vous voyez d'autres onglets avec donn√©es, cliquez dessus aussi!

6Ô∏è‚É£  TERMINER:
   ‚ö†Ô∏è  NE FERMEZ PAS le navigateur
   ‚Üí Revenez ici et appuyez sur Entr√©e
        """)

        # Aller √† la page de login
        print("\nüåê Navigation vers la page de login...")
        await page.goto("https://dentalprovider.metlife.com/presignin")

        print("\n‚è∏Ô∏è MAINTENANT, EFFECTUEZ TOUTE LA NAVIGATION CI-DESSUS")
        print("   Prenez votre temps, naviguez sur TOUTES les pages importantes")
        input("\n‚úã Appuyez sur Entr√©e ICI quand vous avez TOUT navigu√©...")

        # Capturer des infos finales
        final_url = page.url
        print(f"\nüìç URL finale captur√©e: {final_url}")

        # Sauvegarder le contenu de la derni√®re page
        content = await page.content()
        html_filename = f"page_finale_{timestamp}.html"
        with open(html_filename, 'w', encoding='utf-8') as f:
            f.write(content)

        # V√©rifier quelques donn√©es
        found_data = []
        if '$196' in content:
            found_data.append("$196 Maximum Used")
        if '03/28/25' in content or '03/10/25' in content:
            found_data.append("Dates de service")
        if 'AVERLY' in content:
            found_data.append("Donn√©es patient AVERLY")

        if found_data:
            print(f"‚úÖ Donn√©es trouv√©es dans la derni√®re page: {', '.join(found_data)}")

        # Sauvegarder la session pour r√©utilisation
        await context.storage_state(path=f"session_{timestamp}.json")

        # Fermer proprement
        await browser.close()

        print("\n" + "="*60)
        print("‚úÖ CAPTURE TERMIN√âE AVEC SUCC√àS!")
        print("="*60)
        print(f"\nüì¶ Fichiers cr√©√©s:")
        print(f"   1. {har_filename} - TOUTES les requ√™tes r√©seau")
        print(f"   2. {html_filename} - Derni√®re page visit√©e")
        print(f"   3. session_{timestamp}.json - Session pour r√©utilisation")
        print("\nüí° Le HAR contient TOUT ce qui s'est pass√© depuis le d√©but")
        print("   Utilisez ce fichier pour analyser toutes les requ√™tes")

        return har_filename

if __name__ == "__main__":
    har_file = asyncio.run(capture_complete_har())
    print(f"\nüéØ Pour analyser: python analyze_har.py {har_file}")